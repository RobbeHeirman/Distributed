/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.distributed.proto;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FridgeInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FridgeInfo\",\"namespace\":\"avro.distributed.proto\",\"fields\":[{\"name\":\"client_info\",\"type\":{\"type\":\"record\",\"name\":\"ClientInfo\",\"fields\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"ClientType\",\"symbols\":[\"USER\",\"FRIDGE\",\"LIGHT\",\"SENSOR\"]}},{\"name\":\"key\",\"type\":\"int\"},{\"name\":\"online\",\"type\":\"boolean\"}]}},{\"name\":\"inventory\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public avro.distributed.proto.ClientInfo client_info;
  @Deprecated public java.util.List<java.lang.CharSequence> inventory;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public FridgeInfo() {}

  /**
   * All-args constructor.
   */
  public FridgeInfo(avro.distributed.proto.ClientInfo client_info, java.util.List<java.lang.CharSequence> inventory) {
    this.client_info = client_info;
    this.inventory = inventory;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return client_info;
    case 1: return inventory;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: client_info = (avro.distributed.proto.ClientInfo)value$; break;
    case 1: inventory = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'client_info' field.
   */
  public avro.distributed.proto.ClientInfo getClientInfo() {
    return client_info;
  }

  /**
   * Sets the value of the 'client_info' field.
   * @param value the value to set.
   */
  public void setClientInfo(avro.distributed.proto.ClientInfo value) {
    this.client_info = value;
  }

  /**
   * Gets the value of the 'inventory' field.
   */
  public java.util.List<java.lang.CharSequence> getInventory() {
    return inventory;
  }

  /**
   * Sets the value of the 'inventory' field.
   * @param value the value to set.
   */
  public void setInventory(java.util.List<java.lang.CharSequence> value) {
    this.inventory = value;
  }

  /** Creates a new FridgeInfo RecordBuilder */
  public static avro.distributed.proto.FridgeInfo.Builder newBuilder() {
    return new avro.distributed.proto.FridgeInfo.Builder();
  }
  
  /** Creates a new FridgeInfo RecordBuilder by copying an existing Builder */
  public static avro.distributed.proto.FridgeInfo.Builder newBuilder(avro.distributed.proto.FridgeInfo.Builder other) {
    return new avro.distributed.proto.FridgeInfo.Builder(other);
  }
  
  /** Creates a new FridgeInfo RecordBuilder by copying an existing FridgeInfo instance */
  public static avro.distributed.proto.FridgeInfo.Builder newBuilder(avro.distributed.proto.FridgeInfo other) {
    return new avro.distributed.proto.FridgeInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for FridgeInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FridgeInfo>
    implements org.apache.avro.data.RecordBuilder<FridgeInfo> {

    private avro.distributed.proto.ClientInfo client_info;
    private java.util.List<java.lang.CharSequence> inventory;

    /** Creates a new Builder */
    private Builder() {
      super(avro.distributed.proto.FridgeInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.distributed.proto.FridgeInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.client_info)) {
        this.client_info = data().deepCopy(fields()[0].schema(), other.client_info);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.inventory)) {
        this.inventory = data().deepCopy(fields()[1].schema(), other.inventory);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing FridgeInfo instance */
    private Builder(avro.distributed.proto.FridgeInfo other) {
            super(avro.distributed.proto.FridgeInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.client_info)) {
        this.client_info = data().deepCopy(fields()[0].schema(), other.client_info);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.inventory)) {
        this.inventory = data().deepCopy(fields()[1].schema(), other.inventory);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'client_info' field */
    public avro.distributed.proto.ClientInfo getClientInfo() {
      return client_info;
    }
    
    /** Sets the value of the 'client_info' field */
    public avro.distributed.proto.FridgeInfo.Builder setClientInfo(avro.distributed.proto.ClientInfo value) {
      validate(fields()[0], value);
      this.client_info = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'client_info' field has been set */
    public boolean hasClientInfo() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'client_info' field */
    public avro.distributed.proto.FridgeInfo.Builder clearClientInfo() {
      client_info = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'inventory' field */
    public java.util.List<java.lang.CharSequence> getInventory() {
      return inventory;
    }
    
    /** Sets the value of the 'inventory' field */
    public avro.distributed.proto.FridgeInfo.Builder setInventory(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.inventory = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'inventory' field has been set */
    public boolean hasInventory() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'inventory' field */
    public avro.distributed.proto.FridgeInfo.Builder clearInventory() {
      inventory = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public FridgeInfo build() {
      try {
        FridgeInfo record = new FridgeInfo();
        record.client_info = fieldSetFlags()[0] ? this.client_info : (avro.distributed.proto.ClientInfo) defaultValue(fields()[0]);
        record.inventory = fieldSetFlags()[1] ? this.inventory : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
